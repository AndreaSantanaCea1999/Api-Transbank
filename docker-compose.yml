version: '3.8'

services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: ferremas-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-ferremas2024}
      MYSQL_DATABASE: ferremas_complete
      MYSQL_USER: administrador
      MYSQL_PASSWORD: ${DB_PASSWORD:-yR!9uL2@pX}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - ferremas-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    container_name: ferremas-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ferremas-network
    command: redis-server --appendonly yes

  # API Inventario (Puerto 3000)
  api-inventario:
    build: 
      context: ./api-inventario
      dockerfile: Dockerfile
    container_name: ferremas-inventario
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=mysql
      - DB_USER=administrador
      - DB_PASSWORD=${DB_PASSWORD:-yR!9uL2@pX}
      - DB_NAME=ferremas_complete
      - DB_PORT=3306
      - REDIS_URL=redis://redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - ferremas-network
    volumes:
      - ./logs/inventario:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Banco (Puerto 3001)
  api-banco:
    build: 
      context: ./api-banco
      dockerfile: Dockerfile
    container_name: ferremas-banco
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=mysql
      - DB_USER=administrador
      - DB_PASSWORD=${DB_PASSWORD:-yR!9uL2@pX}
      - DB_NAME=ferremas_complete
      - DB_PORT=3306
      - API_INVENTARIO_URL=http://api-inventario:3000/api
      - REDIS_URL=redis://redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      api-inventario:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - ferremas-network
    volumes:
      - ./logs/banco:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Transbank (Puerto 3002)
  api-transbank:
    build: 
      context: ./api-transbank
      dockerfile: Dockerfile
    container_name: ferremas-transbank
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - DB_HOST=mysql
      - DB_USER=administrador
      - DB_PASSWORD=${DB_PASSWORD:-yR!9uL2@pX}
      - DB_NAME=ferremas_complete
      - DB_PORT=3306
      - API_INVENTARIO_URL=http://api-inventario:3000/api
      - API_BANCO_URL=http://api-banco:3001/api
      - TRANSBANK_ENVIRONMENT=${TRANSBANK_ENVIRONMENT:-integration}
      - TRANSBANK_COMMERCE_CODE=${TRANSBANK_COMMERCE_CODE:-597055555532}
      - TRANSBANK_API_KEY=${TRANSBANK_API_KEY:-579B532A7440BB0C9079DED94D31EA1615BACEB56610332264630D42D0A36B1C}
      - FRONTEND_BASE_URL=http://localhost:4200
      - REDIS_URL=redis://redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      api-inventario:
        condition: service_healthy
      api-banco:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - ferremas-network
    volumes:
      - ./logs/transbank:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ferremas-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api-inventario
      - api-banco
      - api-transbank
    networks:
      - ferremas-network

  # Frontend Angular (opcional para desarrollo)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ferremas-frontend
    restart: unless-stopped
    ports:
      - "4200:80"
    environment:
      - API_BASE_URL=http://nginx
    depends_on:
      - nginx
    networks:
      - ferremas-network

  # Monitoring con Prometheus (opcional)
  prometheus:
    image: prom/prometheus:latest
    container_name: ferremas-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - ferremas-network
    profiles:
      - monitoring

  # Grafana para dashboards (opcional)
  grafana:
    image: grafana/grafana:latest
    container_name: ferremas-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    networks:
      - ferremas-network
    profiles:
      - monitoring

networks:
  ferremas-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
